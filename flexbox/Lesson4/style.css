.container {
    height: 140px;
    padding: 16px;
    background: plum;
    border: 4px solid indigo;
    display: flex;
    align-items: center;
    justify-content: center;
}
/* justify-content (main axis) aligns items across the main exit of the items in the flex container which in this case would be the '.item' in container
align-item (cross axis)

these rules can change if you change the flex-direction, remember the flex-direction by default is row

if you change the flex-direction to column then these rules flip
justify-content aligns vertically 
align-items aligns horizontally */

.item {
    width: 60px;
    height: 60px;
    border: 4px solid darkslategray;
    background: skyblue;
    
}

/*using the gap property on a flex container simply adds a specified space between flex items 
*/
.container2 {
    height: 140px;
    padding: 16px;
    background: plum;
    border: 4px solid indigo;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  .item1 {
    width: 60px;
    height: 60px;
    border: 4px solid darkslategray;
    background: skyblue;
  }